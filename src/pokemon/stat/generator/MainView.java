/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pokemon.stat.generator;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSpinner;
import javax.swing.JTextField;

/**
 *
 * @author Felix
 */
public class MainView extends javax.swing.JFrame {

    private final PokemonStatGenerator c;
    private final Model m;
    private final JRadioButton[] ntrPLUSArr;
    private final JRadioButton[] ntrMINUSArr;
    private final JLabel[] statAnz;
    private final JSpinner[] statCha;
    private final JSpinner[] evs;
    private ArrayList<StufenRechner> windows;

    
    /**
     * Creates new form MainView
     * @param c Controller
     * @param m Model
     */
    public MainView(PokemonStatGenerator c, Model m) {
        this.c = c;
        this.m = m;
        initComponents();
        
        windows = new ArrayList<>();
        
        ntrPLUS.add(ntrATKp);
        ntrPLUS.add(ntrDEFp);
        ntrPLUS.add(ntrSPAp);
        ntrPLUS.add(ntrSPDp);
        ntrPLUS.add(ntrINIp);
        ntrATKp.setSelected(true);
        
        ntrMINUS.add(ntrATKm);
        ntrMINUS.add(ntrDEFm);
        ntrMINUS.add(ntrSPAm);
        ntrMINUS.add(ntrSPDm);
        ntrMINUS.add(ntrINIm);
        ntrATKm.setSelected(true);
        
        JRadioButton[] placeholder1 = {ntrATKp, ntrDEFp, ntrSPAp, ntrSPDp, ntrINIp};
        ntrPLUSArr = placeholder1;
        JRadioButton[] placeholder2 = {ntrATKm, ntrDEFm, ntrSPAm, ntrSPDm, ntrINIm};
        ntrMINUSArr = placeholder2;
        
        ntrLB.setText(m.setNature(ntrPLUSArr, ntrMINUSArr));
        
        statAnz = new JLabel[] {hpStat, atkStat, defStat, spaStat, spdStat, iniStat};
        statCha = new JSpinner[] {AtkStageSpinner, DefStageSpinner, SpAtkStageSpinner, SpDefStageSpinner, InitStageSpinner};
        
        evs = new JSpinner[] {hpEV, atkEV, defEV, spaEV, spdEV, iniEV};
        
        
        abilityDescTA.setWrapStyleWord(true);
        abilityDescTA.setLineWrap(true);
        abilityDescTA.setEditable(false);
        
        m.getImage(gif);
        //getEV();
        m.setStatChange(statCha);
        refreshTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ntrPLUS = new javax.swing.ButtonGroup();
        ntrMINUS = new javax.swing.ButtonGroup();
        langCode = new javax.swing.ButtonGroup();
        pkmLB = new javax.swing.JLabel();
        generate = new javax.swing.JButton();
        stsPL = new javax.swing.JPanel();
        hpLBStat = new javax.swing.JLabel();
        atkLBStat = new javax.swing.JLabel();
        defLBStat = new javax.swing.JLabel();
        spaLBStat = new javax.swing.JLabel();
        spdLBStat = new javax.swing.JLabel();
        iniLBStat = new javax.swing.JLabel();
        hpStat = new javax.swing.JLabel();
        atkStat = new javax.swing.JLabel();
        defStat = new javax.swing.JLabel();
        spaStat = new javax.swing.JLabel();
        spdStat = new javax.swing.JLabel();
        iniStat = new javax.swing.JLabel();
        resetChange = new javax.swing.JButton();
        AtkStageSpinner = new javax.swing.JSpinner();
        DefStageSpinner = new javax.swing.JSpinner();
        SpAtkStageSpinner = new javax.swing.JSpinner();
        SpDefStageSpinner = new javax.swing.JSpinner();
        InitStageSpinner = new javax.swing.JSpinner();
        ivsPL = new javax.swing.JPanel();
        hpLBIV = new javax.swing.JLabel();
        atkLBIV = new javax.swing.JLabel();
        defLBIV = new javax.swing.JLabel();
        spaLBIV = new javax.swing.JLabel();
        spdLBIV = new javax.swing.JLabel();
        iniLBIV = new javax.swing.JLabel();
        randIV = new javax.swing.JButton();
        hpIV = new javax.swing.JSpinner();
        atkIV = new javax.swing.JSpinner();
        defIV = new javax.swing.JSpinner();
        spaIV = new javax.swing.JSpinner();
        spdIV = new javax.swing.JSpinner();
        iniIV = new javax.swing.JSpinner();
        evsPL1 = new javax.swing.JPanel();
        hpLBEV = new javax.swing.JLabel();
        atkLBEV = new javax.swing.JLabel();
        defLBEV = new javax.swing.JLabel();
        spaLBEV = new javax.swing.JLabel();
        spdLBEV = new javax.swing.JLabel();
        iniLBEV = new javax.swing.JLabel();
        setZero = new javax.swing.JButton();
        totLB = new javax.swing.JLabel();
        totNrLB = new javax.swing.JLabel();
        randEV = new javax.swing.JButton();
        hpEV = new javax.swing.JSpinner();
        atkEV = new javax.swing.JSpinner();
        defEV = new javax.swing.JSpinner();
        spaEV = new javax.swing.JSpinner();
        spdEV = new javax.swing.JSpinner();
        iniEV = new javax.swing.JSpinner();
        abLB = new javax.swing.JLabel();
        abCB = new javax.swing.JComboBox<>();
        lvlLB = new javax.swing.JLabel();
        ntrPN = new javax.swing.JPanel();
        ntrATKp = new javax.swing.JRadioButton();
        ntrDEFp = new javax.swing.JRadioButton();
        ntrSPAp = new javax.swing.JRadioButton();
        ntrSPDp = new javax.swing.JRadioButton();
        ntrINIp = new javax.swing.JRadioButton();
        ntrATKm = new javax.swing.JRadioButton();
        ntrDEFm = new javax.swing.JRadioButton();
        ntrSPAm = new javax.swing.JRadioButton();
        ntrSPDm = new javax.swing.JRadioButton();
        ntrINIm = new javax.swing.JRadioButton();
        plusLB = new javax.swing.JLabel();
        minusLB = new javax.swing.JLabel();
        randNTR = new javax.swing.JButton();
        ntrLB = new javax.swing.JLabel();
        gif = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        evLB = new javax.swing.JLabel();
        evTXT = new javax.swing.JLabel();
        exp = new javax.swing.JLabel();
        newWindow = new javax.swing.JButton();
        pkmNameIDTF = new javax.swing.JTextField();
        loadButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        abilityDescTA = new javax.swing.JTextArea();
        levelSpinner = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attackList = new javax.swing.JList<>();
        mainMenuBar = new javax.swing.JMenuBar();
        AppsJM = new javax.swing.JMenu();
        OpenAttackSimMI = new javax.swing.JMenuItem();
        OpenPartyManagerMI = new javax.swing.JMenuItem();
        PropertiesJM = new javax.swing.JMenu();
        languageJM = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyRPG: Pokémon Stat Calculator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 500));

        pkmLB.setText("Pokémon:");

        generate.setText("Generate");
        generate.setEnabled(false);
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        stsPL.setBorder(javax.swing.BorderFactory.createTitledBorder("Stats"));
        stsPL.setToolTipText("");
        stsPL.setMaximumSize(new java.awt.Dimension(213, 266));
        stsPL.setMinimumSize(new java.awt.Dimension(213, 266));
        stsPL.setPreferredSize(new java.awt.Dimension(213, 266));

        hpLBStat.setText("HP:");

        atkLBStat.setText("Atk:");

        defLBStat.setText("Def:");

        spaLBStat.setText("SpAtk:");

        spdLBStat.setText("SpDef:");

        iniLBStat.setText("Speed:");

        resetChange.setText("Set 0");
        resetChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetChangeActionPerformed(evt);
            }
        });

        AtkStageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -6, 6, 1));
        AtkStageSpinner.setEnabled(false);
        AtkStageSpinner.setName("atkSpinner"); // NOI18N
        AtkStageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                statStageChange(evt);
            }
        });

        DefStageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -6, 6, 1));
        DefStageSpinner.setEnabled(false);
        DefStageSpinner.setName("defSpinner"); // NOI18N
        DefStageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                statStageChange(evt);
            }
        });

        SpAtkStageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -6, 6, 1));
        SpAtkStageSpinner.setEnabled(false);
        SpAtkStageSpinner.setName("spaSpinner"); // NOI18N
        SpAtkStageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                statStageChange(evt);
            }
        });

        SpDefStageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -6, 6, 1));
        SpDefStageSpinner.setEnabled(false);
        SpDefStageSpinner.setName("spdSpinner"); // NOI18N
        SpDefStageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                statStageChange(evt);
            }
        });

        InitStageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, -6, 6, 1));
        InitStageSpinner.setEnabled(false);
        InitStageSpinner.setName("iniSpinner"); // NOI18N
        InitStageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                statStageChange(evt);
            }
        });

        javax.swing.GroupLayout stsPLLayout = new javax.swing.GroupLayout(stsPL);
        stsPL.setLayout(stsPLLayout);
        stsPLLayout.setHorizontalGroup(
            stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stsPLLayout.createSequentialGroup()
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stsPLLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stsPLLayout.createSequentialGroup()
                                .addComponent(atkLBStat, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(atkStat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(AtkStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(stsPLLayout.createSequentialGroup()
                                .addComponent(hpLBStat, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hpStat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(stsPLLayout.createSequentialGroup()
                                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(defLBStat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spaLBStat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spdLBStat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(iniLBStat, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(stsPLLayout.createSequentialGroup()
                                        .addComponent(iniStat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(InitStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(stsPLLayout.createSequentialGroup()
                                        .addComponent(defStat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DefStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(stsPLLayout.createSequentialGroup()
                                        .addComponent(spaStat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SpAtkStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(stsPLLayout.createSequentialGroup()
                                        .addComponent(spdStat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SpDefStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stsPLLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetChange)))
                .addGap(15, 15, 15))
        );
        stsPLLayout.setVerticalGroup(
            stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stsPLLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hpLBStat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hpStat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atkLBStat)
                    .addComponent(atkStat)
                    .addComponent(AtkStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defStat)
                    .addComponent(defLBStat)
                    .addComponent(DefStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spaStat)
                    .addComponent(spaLBStat)
                    .addComponent(SpAtkStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spdStat)
                    .addComponent(spdLBStat)
                    .addComponent(SpDefStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iniStat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iniLBStat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InitStageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(resetChange)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ivsPL.setBorder(javax.swing.BorderFactory.createTitledBorder("IVs"));
        ivsPL.setToolTipText("");

        hpLBIV.setText("HP:");

        atkLBIV.setText("Atk:");

        defLBIV.setText("Def:");

        spaLBIV.setText("SpAtk:");

        spdLBIV.setText("SpDef:");

        iniLBIV.setText("Speed:");

        randIV.setText("Random");
        randIV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randIVActionPerformed(evt);
            }
        });

        hpIV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 31, 1));

        atkIV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 31, 1));

        defIV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 31, 1));

        spaIV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 31, 1));

        spdIV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 31, 1));

        iniIV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 31, 1));

        javax.swing.GroupLayout ivsPLLayout = new javax.swing.GroupLayout(ivsPL);
        ivsPL.setLayout(ivsPLLayout);
        ivsPLLayout.setHorizontalGroup(
            ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ivsPLLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(randIV)
                    .addGroup(ivsPLLayout.createSequentialGroup()
                        .addComponent(hpLBIV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hpIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ivsPLLayout.createSequentialGroup()
                        .addComponent(atkLBIV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atkIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ivsPLLayout.createSequentialGroup()
                        .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spaLBIV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spdLBIV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(iniLBIV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(defLBIV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iniIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spaIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(defIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spdIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ivsPLLayout.setVerticalGroup(
            ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ivsPLLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hpLBIV)
                    .addComponent(hpIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atkLBIV)
                    .addComponent(atkIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defLBIV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spaLBIV)
                    .addComponent(spaIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spdLBIV)
                    .addComponent(spdIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ivsPLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniLBIV)
                    .addComponent(iniIV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(randIV)
                .addContainerGap())
        );

        evsPL1.setBorder(javax.swing.BorderFactory.createTitledBorder("EVs"));
        evsPL1.setToolTipText("");
        evsPL1.setMaximumSize(new java.awt.Dimension(163, 289));
        evsPL1.setMinimumSize(new java.awt.Dimension(163, 289));
        evsPL1.setPreferredSize(new java.awt.Dimension(163, 289));

        hpLBEV.setText("HP:");

        atkLBEV.setText("Atk:");

        defLBEV.setText("Def:");

        spaLBEV.setText("SpAtk:");

        spdLBEV.setText("SpDef:");

        iniLBEV.setText("Speed:");

        setZero.setText("Set 0");
        setZero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setZeroActionPerformed(evt);
            }
        });

        totLB.setText("Total:");

        totNrLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totNrLB.setText("0");

        randEV.setText("Random 50");
        randEV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randEVActionPerformed(evt);
            }
        });

        hpEV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));

        atkEV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));

        defEV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));

        spaEV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));

        spdEV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));

        iniEV.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));

        javax.swing.GroupLayout evsPL1Layout = new javax.swing.GroupLayout(evsPL1);
        evsPL1.setLayout(evsPL1Layout);
        evsPL1Layout.setHorizontalGroup(
            evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evsPL1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(evsPL1Layout.createSequentialGroup()
                        .addComponent(spaLBEV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spaEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(evsPL1Layout.createSequentialGroup()
                        .addComponent(hpLBEV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hpEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(evsPL1Layout.createSequentialGroup()
                        .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(atkLBEV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(defLBEV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(defEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(atkEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(evsPL1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(randEV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setZero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(evsPL1Layout.createSequentialGroup()
                        .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(spdLBEV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(iniLBEV, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                            .addComponent(totLB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totNrLB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spdEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iniEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, Short.MAX_VALUE))
        );
        evsPL1Layout.setVerticalGroup(
            evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evsPL1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hpLBEV)
                    .addComponent(hpEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atkLBEV)
                    .addComponent(atkEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defLBEV)
                    .addComponent(defEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spaLBEV)
                    .addComponent(spaEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spdLBEV)
                    .addComponent(spdEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniLBEV)
                    .addComponent(iniEV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(evsPL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totNrLB)
                    .addComponent(totLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randEV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setZero)
                .addGap(18, 18, 18))
        );

        abLB.setText("Ability:");

        abCB.setEnabled(false);
        abCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                abilityStateChanged(evt);
            }
        });

        lvlLB.setText("Level:");

        ntrPN.setBorder(javax.swing.BorderFactory.createTitledBorder("Nature"));
        ntrPN.setMaximumSize(new java.awt.Dimension(164, 266));
        ntrPN.setMinimumSize(new java.awt.Dimension(164, 266));

        ntrATKp.setText("Atk");
        ntrATKp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrDEFp.setText("Def");
        ntrDEFp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrSPAp.setText("SpAtk");
        ntrSPAp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrSPDp.setText("SpDef");
        ntrSPDp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrINIp.setText("Speed");
        ntrINIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrATKm.setText("Atk");
        ntrATKm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrDEFm.setText("Def");
        ntrDEFm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrSPAm.setText("SpAtk");
        ntrSPAm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrSPDm.setText("SpDef");
        ntrSPDm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        ntrINIm.setText("Speed");
        ntrINIm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureRadioPressed(evt);
            }
        });

        plusLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        plusLB.setText("-");
        plusLB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        minusLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minusLB.setText("+");
        minusLB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        randNTR.setText("Random");
        randNTR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randNTRActionPerformed(evt);
            }
        });

        ntrLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ntrLB.setText("jLabel1");

        javax.swing.GroupLayout ntrPNLayout = new javax.swing.GroupLayout(ntrPN);
        ntrPN.setLayout(ntrPNLayout);
        ntrPNLayout.setHorizontalGroup(
            ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ntrPNLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ntrPNLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(randNTR)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ntrPNLayout.createSequentialGroup()
                        .addGroup(ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ntrPNLayout.createSequentialGroup()
                                .addGroup(ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ntrDEFp)
                                    .addComponent(ntrSPAp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ntrSPDp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ntrINIp)
                                    .addComponent(ntrATKp)
                                    .addComponent(minusLB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ntrATKm)
                                    .addComponent(ntrDEFm)
                                    .addComponent(ntrSPAm)
                                    .addComponent(ntrSPDm)
                                    .addComponent(ntrINIm)
                                    .addComponent(plusLB, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(ntrLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        ntrPNLayout.setVerticalGroup(
            ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ntrPNLayout.createSequentialGroup()
                .addComponent(ntrLB, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minusLB)
                    .addComponent(plusLB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ntrPNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ntrPNLayout.createSequentialGroup()
                        .addComponent(ntrATKm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrDEFm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrSPAm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrSPDm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrINIm))
                    .addGroup(ntrPNLayout.createSequentialGroup()
                        .addComponent(ntrATKp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrDEFp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrSPAp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrSPDp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntrINIp)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(randNTR)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        gif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gif.setBorder(javax.swing.BorderFactory.createTitledBorder("Icon"));
        gif.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Info"));
        jPanel1.setMaximumSize(new java.awt.Dimension(130, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(130, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(130, 100));

        evLB.setText("EVs:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(evTXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(evLB)
                        .addGap(0, 81, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(evLB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        exp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exp.setBorder(javax.swing.BorderFactory.createTitledBorder("Exp."));
        exp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exp.setMaximumSize(new java.awt.Dimension(130, 100));
        exp.setMinimumSize(new java.awt.Dimension(130, 100));
        exp.setPreferredSize(new java.awt.Dimension(130, 100));

        newWindow.setText("Open New Window");
        newWindow.setEnabled(false);
        newWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newWindowActionPerformed(evt);
            }
        });

        pkmNameIDTF.setToolTipText("enter either the english name of a Pokémon or its national Pokédex ID");
        pkmNameIDTF.setName("pkmNameIDTF"); // NOI18N

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        nameLabel.setText("Pokémon Name");

        jScrollPane1.setMaximumSize(new java.awt.Dimension(234, 200));

        abilityDescTA.setColumns(20);
        abilityDescTA.setRows(5);
        abilityDescTA.setMaximumSize(new java.awt.Dimension(234, 200));
        jScrollPane1.setViewportView(abilityDescTA);

        levelSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Attacks"));

        attackList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(attackList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        mainMenuBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        AppsJM.setText("Apps");

        OpenAttackSimMI.setText("Open AttackSim");
        OpenAttackSimMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenAttackSimMIAction(evt);
            }
        });
        AppsJM.add(OpenAttackSimMI);

        OpenPartyManagerMI.setText("Open PartyManager");
        OpenPartyManagerMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenPartyManagerMIActionPerformed(evt);
            }
        });
        AppsJM.add(OpenPartyManagerMI);

        mainMenuBar.add(AppsJM);

        PropertiesJM.setText("Properties");

        languageJM.setText("Language");

        langCode.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setText("en");
        jRadioButtonMenuItem1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageCodeChanged(evt);
            }
        });
        languageJM.add(jRadioButtonMenuItem1);

        langCode.add(jRadioButtonMenuItem2);
        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("de");
        jRadioButtonMenuItem2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageCodeChanged(evt);
            }
        });
        languageJM.add(jRadioButtonMenuItem2);

        langCode.add(jRadioButtonMenuItem3);
        jRadioButtonMenuItem3.setText("es");
        jRadioButtonMenuItem3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageCodeChanged(evt);
            }
        });
        languageJM.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setText("it");
        jRadioButtonMenuItem4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageCodeChanged(evt);
            }
        });
        languageJM.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setText("fr");
        jRadioButtonMenuItem5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageCodeChanged(evt);
            }
        });
        languageJM.add(jRadioButtonMenuItem5);

        PropertiesJM.add(languageJM);

        jCheckBoxMenuItem1.setText("show higher level moves");
        PropertiesJM.add(jCheckBoxMenuItem1);

        mainMenuBar.add(PropertiesJM);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(evsPL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ntrPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stsPL, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(newWindow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ivsPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabel)
                                        .addGap(123, 123, 123)
                                        .addComponent(loadButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pkmLB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pkmNameIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(abLB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(abCB, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lvlLB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(levelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gif, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pkmLB)
                                    .addComponent(pkmNameIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lvlLB, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(levelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameLabel)
                                    .addComponent(loadButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(abLB)
                                    .addComponent(abCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ivsPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(gif, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ntrPN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stsPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newWindow)
                            .addComponent(generate)))
                    .addComponent(evsPL1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        m.statReset(statCha);
        int[] IVs = { (int) hpIV.getValue(), (int) atkIV.getValue(), (int) defIV.getValue(), (int) spaIV.getValue(), (int) spdIV.getValue(), (int) iniIV.getValue()};
        int[] EVs = getEVValues();
        
        m.calculateStats(EVs, IVs, (int) levelSpinner.getValue(), statAnz, exp);
        newWindow.setEnabled(true);
        for (JSpinner statCha1 : statCha) {
            statCha1.setEnabled(true);
        }
        
        refreshTotal();
    }//GEN-LAST:event_generateActionPerformed

    private void randIVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randIVActionPerformed
        hpIV.setValue((int)(Math.random()*32));
        atkIV.setValue((int)(Math.random()*32));
        defIV.setValue((int)(Math.random()*32));
        spaIV.setValue((int)(Math.random()*32));
        spdIV.setValue((int)(Math.random()*32));
        iniIV.setValue((int)(Math.random()*32));
    }//GEN-LAST:event_randIVActionPerformed

    private void setZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setZeroActionPerformed
        for (JSpinner s: evs){
            s.setValue(0);
        }
        refreshTotal();
    }//GEN-LAST:event_setZeroActionPerformed

    private void randNTRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randNTRActionPerformed
        ntrPLUSArr[(int)((Math.random() * ntrPLUSArr.length))].setSelected(true);                                     
        ntrMINUSArr[(int)((Math.random() * ntrMINUSArr.length))].setSelected(true);
        ntrLB.setText(m.setNature(ntrPLUSArr, ntrMINUSArr));
    }//GEN-LAST:event_randNTRActionPerformed

    private void randEVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randEVActionPerformed
        for (JSpinner s : evs){
            s.setValue((int)Math.floor(Math.random()*51));
        }
        refreshTotal();
    }//GEN-LAST:event_randEVActionPerformed

    private void newWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newWindowActionPerformed
        Pokemon p = new Pokemon(m.getP());
        p.setStats(m.getStats().clone());
        p.setExp(exp.getText());
        p.setLevel((int) levelSpinner.getValue());
        p.setAbility(abCB.getSelectedItem().toString());
        StufenRechner s = new StufenRechner(p);
        s.setVisible(true);
        windows.add(s);
    }//GEN-LAST:event_newWindowActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        loadButton.setEnabled(false);
        m.loadPokemon(pkmNameIDTF.getText());
        setAbilities();
        m.setAbility(abCB.getSelectedItem().toString());
        abilityDescTA.setText(m.getAbilityDesc());
        m.setName(nameLabel);
        m.getImage(gif);
        getEV();
        generate.setEnabled(true);
        newWindow.setEnabled(false);                          
        loadButton.setEnabled(true);
        abCB.setEnabled(true);
        m.setAttackList(attackList);
    }//GEN-LAST:event_loadButtonActionPerformed

    private void resetChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetChangeActionPerformed
        m.statReset(statCha);
        m.adjustStats(statAnz);
    }//GEN-LAST:event_resetChangeActionPerformed

    private void OpenAttackSimMIAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenAttackSimMIAction
        c.openAttackSim();
    }//GEN-LAST:event_OpenAttackSimMIAction

    private void OpenPartyManagerMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenPartyManagerMIActionPerformed
        c.openPartyManager();
    }//GEN-LAST:event_OpenPartyManagerMIActionPerformed

    private void abilityStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_abilityStateChanged
        m.setAbility(abCB.getSelectedItem().toString());
        abilityDescTA.setText(m.getAbilityDesc());
    }//GEN-LAST:event_abilityStateChanged

    private void languageCodeChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_languageCodeChanged
        JRadioButtonMenuItem item = (JRadioButtonMenuItem) evt.getItem();
        if (!item.isSelected()) return;
        System.out.println(item.getText());
        m.updateLanguage(item.getText());
        setAbilities();
        m.setName(nameLabel);
        m.setAbility(abCB.getSelectedItem().toString());
        abilityDescTA.setText(m.getAbilityDesc());
    }//GEN-LAST:event_languageCodeChanged

    private void natureRadioPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natureRadioPressed
        ntrLB.setText(m.setNature(ntrPLUSArr, ntrMINUSArr));
    }//GEN-LAST:event_natureRadioPressed

    private void statStageChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_statStageChange
        JSpinner js = (JSpinner) evt.getSource();
        switch (js.getName()) {
            case "atkSpinner":
                m.setStatStage(0, (Integer) AtkStageSpinner.getValue());
                break;
            case "defSpinner":
                m.setStatStage(1, (Integer) DefStageSpinner.getValue());
                break;
            case "spaSpinner":
                m.setStatStage(2, (Integer) SpAtkStageSpinner.getValue());
                break;
            case "spdSpinner":
                m.setStatStage(3, (Integer) SpDefStageSpinner.getValue());
                break;
            case "iniSpinner":
                m.setStatStage(4, (Integer) InitStageSpinner.getValue());
                break;
            default:
                System.out.println("ERROR statStageChanged [MainView]");
                break;
        }
        m.adjustStats(statAnz);
    }//GEN-LAST:event_statStageChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AppsJM;
    private javax.swing.JSpinner AtkStageSpinner;
    private javax.swing.JSpinner DefStageSpinner;
    private javax.swing.JSpinner InitStageSpinner;
    private javax.swing.JMenuItem OpenAttackSimMI;
    private javax.swing.JMenuItem OpenPartyManagerMI;
    private javax.swing.JMenu PropertiesJM;
    private javax.swing.JSpinner SpAtkStageSpinner;
    private javax.swing.JSpinner SpDefStageSpinner;
    private javax.swing.JComboBox<String> abCB;
    private javax.swing.JLabel abLB;
    private javax.swing.JTextArea abilityDescTA;
    private javax.swing.JSpinner atkEV;
    private javax.swing.JSpinner atkIV;
    private javax.swing.JLabel atkLBEV;
    private javax.swing.JLabel atkLBIV;
    private javax.swing.JLabel atkLBStat;
    private javax.swing.JLabel atkStat;
    private javax.swing.JList<String> attackList;
    private javax.swing.JSpinner defEV;
    private javax.swing.JSpinner defIV;
    private javax.swing.JLabel defLBEV;
    private javax.swing.JLabel defLBIV;
    private javax.swing.JLabel defLBStat;
    private javax.swing.JLabel defStat;
    private javax.swing.JLabel evLB;
    private javax.swing.JLabel evTXT;
    private javax.swing.JPanel evsPL1;
    private javax.swing.JLabel exp;
    private javax.swing.JButton generate;
    private javax.swing.JLabel gif;
    private javax.swing.JSpinner hpEV;
    private javax.swing.JSpinner hpIV;
    private javax.swing.JLabel hpLBEV;
    private javax.swing.JLabel hpLBIV;
    private javax.swing.JLabel hpLBStat;
    private javax.swing.JLabel hpStat;
    private javax.swing.JSpinner iniEV;
    private javax.swing.JSpinner iniIV;
    private javax.swing.JLabel iniLBEV;
    private javax.swing.JLabel iniLBIV;
    private javax.swing.JLabel iniLBStat;
    private javax.swing.JLabel iniStat;
    private javax.swing.JPanel ivsPL;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup langCode;
    private javax.swing.JMenu languageJM;
    private javax.swing.JSpinner levelSpinner;
    private javax.swing.JButton loadButton;
    private javax.swing.JLabel lvlLB;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JLabel minusLB;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton newWindow;
    private javax.swing.JRadioButton ntrATKm;
    private javax.swing.JRadioButton ntrATKp;
    private javax.swing.JRadioButton ntrDEFm;
    private javax.swing.JRadioButton ntrDEFp;
    private javax.swing.JRadioButton ntrINIm;
    private javax.swing.JRadioButton ntrINIp;
    private javax.swing.JLabel ntrLB;
    private javax.swing.ButtonGroup ntrMINUS;
    private javax.swing.ButtonGroup ntrPLUS;
    private javax.swing.JPanel ntrPN;
    private javax.swing.JRadioButton ntrSPAm;
    private javax.swing.JRadioButton ntrSPAp;
    private javax.swing.JRadioButton ntrSPDm;
    private javax.swing.JRadioButton ntrSPDp;
    private javax.swing.JLabel pkmLB;
    private javax.swing.JTextField pkmNameIDTF;
    private javax.swing.JLabel plusLB;
    private javax.swing.JButton randEV;
    private javax.swing.JButton randIV;
    private javax.swing.JButton randNTR;
    private javax.swing.JButton resetChange;
    private javax.swing.JButton setZero;
    private javax.swing.JSpinner spaEV;
    private javax.swing.JSpinner spaIV;
    private javax.swing.JLabel spaLBEV;
    private javax.swing.JLabel spaLBIV;
    private javax.swing.JLabel spaLBStat;
    private javax.swing.JLabel spaStat;
    private javax.swing.JSpinner spdEV;
    private javax.swing.JSpinner spdIV;
    private javax.swing.JLabel spdLBEV;
    private javax.swing.JLabel spdLBIV;
    private javax.swing.JLabel spdLBStat;
    private javax.swing.JLabel spdStat;
    private javax.swing.JPanel stsPL;
    private javax.swing.JLabel totLB;
    private javax.swing.JLabel totNrLB;
    // End of variables declaration//GEN-END:variables

    /**
     * Loads Effort Values (rewarded by defeating this Pokemon) from Model and displays them
     */
    private void getEV() {
        evTXT.setText(m.getEV());
    }
    
    /**
     * Refreshes the stats
     */
    private void refreshTotal(){
        int[] evs = getEVValues();
        int r = 0;
        
        for (int i = 0; i < evs.length; i++){
            r += evs[i];
        }
        
        totNrLB.setText(""+r);
    }
    
    /**
     * Returns the int-Array containing the Effort Values added to this Pokemon
     * 
     * @return int-Array of EVs [HP, Atk, Def, SpA, SpD, Ini]
     */
    private int[] getEVValues(){
        int [] r = new int[6];
        int i = 0;
        
        for (JSpinner s : evs){
            r[i] = (int) s.getValue();
            i++;
        }
        
        
        return r;
    }
    
    /**
     * Populates the Abilities Combobox with the Abilities loaded from the Model
     */
    void setAbilities(){
        javax.swing.DefaultComboBoxModel<String> mod = 
                new javax.swing.DefaultComboBoxModel<String>();
        for (String pa : m.getAbilities()){
            mod.addElement(pa);
        }
        abCB.setModel(mod);
    }
}
