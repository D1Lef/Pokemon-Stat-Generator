/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pokemon.stat.generator;

import javax.swing.JLabel;

/**
 *
 * @author Felix
 */
public class StufenRechner extends javax.swing.JFrame {

    private JLabel[] statsLB;
    private JLabel[] statsChLB;
    
    private Pokemon p;
    
    /** natMUL
     * 0: ATK
     * 1: DEF
     * 2: SPA
     * 3: SPD
     * 4: INI
     */
    private int[] statChange = {0,0,0,0,0};
    /**
     * Creates new form StufenRechner
     */
    public StufenRechner() {
        initComponents();
    }
    
    public StufenRechner(Pokemon p){
        
        initComponents();
        
        this.p = p;
        
        ability.setText("Ability: "+p.getAbility());
        name.setText(p.getName() + "   LV: "+p.getLevel());
        evTXT.setText(p.getEVs());
        exp.setText(p.getExp());
        
        statsLB = new JLabel[] {statHP, statATK, statDEF, statSPA, statSPD, statINI};
        statsChLB = new JLabel[] {mulATK, mulDEF, mulSPA, mulSPD, mulINI};
        
        refreshStats();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        statHP = new javax.swing.JLabel();
        statATK = new javax.swing.JLabel();
        statDEF = new javax.swing.JLabel();
        statSPA = new javax.swing.JLabel();
        statSPD = new javax.swing.JLabel();
        statINI = new javax.swing.JLabel();
        mulATK = new javax.swing.JLabel();
        mulDEF = new javax.swing.JLabel();
        mulSPA = new javax.swing.JLabel();
        mulSPD = new javax.swing.JLabel();
        mulINI = new javax.swing.JLabel();
        pATK = new javax.swing.JButton();
        pDEF = new javax.swing.JButton();
        pSPD = new javax.swing.JButton();
        pSPA = new javax.swing.JButton();
        pINI = new javax.swing.JButton();
        mATK = new javax.swing.JButton();
        mDEF = new javax.swing.JButton();
        mSPA = new javax.swing.JButton();
        mSPD = new javax.swing.JButton();
        mINI = new javax.swing.JButton();
        exp = new javax.swing.JLabel();
        evs = new javax.swing.JLabel();
        ability = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel8 = new javax.swing.JLabel();
        evTXT = new javax.swing.JLabel();
        exp1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("Name");
        name.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("HP:");

        jLabel3.setText("Attack");

        jLabel4.setText("Defense:");

        jLabel5.setText("Sp. Attack:");

        jLabel6.setText("Sp. Defense:");

        jLabel7.setText("Initiative:");

        statHP.setText("300");

        statATK.setText("300");

        statDEF.setText("300");

        statSPA.setText("300");

        statSPD.setText("300");

        statINI.setText("300");

        mulATK.setText("0");

        mulDEF.setText("0");

        mulSPA.setText("0");

        mulSPD.setText("0");
        mulSPD.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        mulINI.setText("0");
        mulINI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        pATK.setText("+");
        pATK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pATKActionPerformed(evt);
            }
        });

        pDEF.setText("+");
        pDEF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDEFActionPerformed(evt);
            }
        });

        pSPD.setText("+");
        pSPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSPDActionPerformed(evt);
            }
        });

        pSPA.setText("+");
        pSPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSPAActionPerformed(evt);
            }
        });

        pINI.setText("+");
        pINI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pINIActionPerformed(evt);
            }
        });

        mATK.setText("-");
        mATK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mATKActionPerformed(evt);
            }
        });

        mDEF.setText("-");
        mDEF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDEFActionPerformed(evt);
            }
        });

        mSPA.setText("-");
        mSPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSPAActionPerformed(evt);
            }
        });

        mSPD.setText("-");
        mSPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSPDActionPerformed(evt);
            }
        });

        mINI.setText("-");
        mINI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mINIActionPerformed(evt);
            }
        });

        exp.setText("EXP:");

        evs.setText("EVs:");

        ability.setText("Ability:");

        jScrollPane1.setViewportView(jEditorPane1);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Notes");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        evTXT.setText("evTXT");

        exp1.setText("EXP:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ability)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statINI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(mulINI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pINI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statATK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(mulATK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pATK, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statHP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(mSPD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(mSPA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(mDEF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(mATK, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(mINI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statDEF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(mulDEF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pDEF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statSPA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(mulSPA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pSPA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statSPD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(mulSPD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pSPD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(evs)
                                    .addComponent(exp1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exp)
                                    .addComponent(evTXT))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ability)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(statHP))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(statATK)
                                    .addComponent(mulATK)
                                    .addComponent(pATK))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(statDEF)
                                    .addComponent(mulDEF)
                                    .addComponent(pDEF))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(statSPA)
                                    .addComponent(mulSPA)
                                    .addComponent(pSPA))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(statSPD)
                                    .addComponent(mulSPD)
                                    .addComponent(pSPD))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(statINI)
                                    .addComponent(mulINI)
                                    .addComponent(pINI)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(mATK)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mDEF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mSPA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mSPD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mINI)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exp)
                            .addComponent(exp1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(evs)
                            .addComponent(evTXT)))
                    .addComponent(jScrollPane1))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pATKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pATKActionPerformed
        if (statChange[0] < 6){
            statChange[0]++;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_pATKActionPerformed

    private void pDEFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDEFActionPerformed
        if (statChange[1] < 6){
            statChange[1]++;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_pDEFActionPerformed

    private void pSPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSPAActionPerformed
        if (statChange[2] < 6){
            statChange[2]++;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_pSPAActionPerformed

    private void pSPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSPDActionPerformed
        if (statChange[3] < 6){
            statChange[3]++;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_pSPDActionPerformed

    private void pINIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pINIActionPerformed
        if (statChange[4] < 6){
            statChange[4]++;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_pINIActionPerformed

    private void mATKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mATKActionPerformed
        if (statChange[0] > -6){
            statChange[0]--;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_mATKActionPerformed

    private void mDEFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mDEFActionPerformed
        if (statChange[1] > -6){
            statChange[1]--;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_mDEFActionPerformed

    private void mSPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSPAActionPerformed
        if (statChange[2] > -6){
            statChange[2]--;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_mSPAActionPerformed

    private void mSPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSPDActionPerformed
        if (statChange[3] > -6){
            statChange[3]--;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_mSPDActionPerformed

    private void mINIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mINIActionPerformed
        if (statChange[4] > -6){
            statChange[4]--;
        }
        refreshMul();
        adjustStats();
    }//GEN-LAST:event_mINIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StufenRechner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StufenRechner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StufenRechner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StufenRechner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StufenRechner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ability;
    private javax.swing.JLabel evTXT;
    private javax.swing.JLabel evs;
    private javax.swing.JLabel exp;
    private javax.swing.JLabel exp1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mATK;
    private javax.swing.JButton mDEF;
    private javax.swing.JButton mINI;
    private javax.swing.JButton mSPA;
    private javax.swing.JButton mSPD;
    private javax.swing.JLabel mulATK;
    private javax.swing.JLabel mulDEF;
    private javax.swing.JLabel mulINI;
    private javax.swing.JLabel mulSPA;
    private javax.swing.JLabel mulSPD;
    private javax.swing.JLabel name;
    private javax.swing.JButton pATK;
    private javax.swing.JButton pDEF;
    private javax.swing.JButton pINI;
    private javax.swing.JButton pSPA;
    private javax.swing.JButton pSPD;
    private javax.swing.JLabel statATK;
    private javax.swing.JLabel statDEF;
    private javax.swing.JLabel statHP;
    private javax.swing.JLabel statINI;
    private javax.swing.JLabel statSPA;
    private javax.swing.JLabel statSPD;
    // End of variables declaration//GEN-END:variables

    private void refreshStats() {
        for (int i = 0; i < this.p.getStats().length; i++){
            statsLB[i].setText(""+this.p.getStats()[i]);
        }
    }
    
    private void refreshMul(){
        for (int i = 0; i < statChange.length; i++){
            if(statChange[i] > 0){
                statsChLB[i].setText("+"+statChange[i]);               
            } else {     
                statsChLB[i].setText(""+statChange[i]);
            }
        }
    }
    
    public void adjustStats(){
        
        double newVal = 0;
        
        if(statsLB[0].getText().length() >= 1){
            for (int i = 0; i < statChange.length; i++){
                if(statChange[i] >= 0){
                    newVal = this.p.getStats()[i+1] * (2 + statChange[i]) / 2;
                } else if (statChange[i] < 0){
                    newVal = this.p.getStats()[i+1] * 2 / (2 + Math.abs(statChange[i]));
                }
                statsLB[i+1].setText(""+(int)Math.floor(newVal));
            }
        }
    }
}
